<project>
	<modelVersion>4.0.0</modelVersion>

	<groupId>fr.learner.hellodocker</groupId>
	<artifactId>hellodocker</artifactId>
	<version>1.0</version>
	<packaging>jar</packaging>
	<name>hellodocker</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<!-- ================================================================== -->
	<!-- DEPENDENCIES -->
	<!-- ================================================================== -->
	<dependencies>
		<!-- Standard Junit dependency -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<!-- Allow usage of http server grizzly -->
		<dependency>
			<groupId>org.glassfish.grizzly</groupId>
			<artifactId>grizzly-http-server</artifactId>
			<version>2.3.28</version>
		</dependency>
	</dependencies>


	<build>
		<plugins>
			<!-- ================================================================== -->
			<!-- Plugin nous permettant d'avoir facilement un jar (self) executable -->
			<!-- ================================================================== -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<!-- Fixe le nom de la class Main -->
							<mainClass>fr.learner.Hello</mainClass>
						</manifest>
					</archive>
					<descriptorRefs>
						<!-- On inclu (tout) le necessaire dans notre jar -->
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					<!-- Fixe le nom du jar genere (pratique pour avoir un nom unique) -->
					<finalName>${project.name}</finalName>
					<appendAssemblyId>false</appendAssemblyId>
				</configuration>
				<!-- On force ci-dessous l'execution du docker build sur un mvn package -->
				<executions>
					<execution>
						<id>simple-command</id>
						<phase>package</phase>
						<goals>
							<goal>attached</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- ================================================ -->
			<!-- Plugin nous permettant d'inclure un DOCKER BUILD -->
			<!-- ================================================ -->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.4.13</version> <!-- Derniere version du plugin lors de mes test -->
				<configuration>
					<!-- Fixe le nom de l'image generee -->
					<imageName>${project.name}_docker</imageName>
					<!-- Indique our trouver le Dockerfile -->
					<dockerDirectory>docker</dockerDirectory>
					<!-- Donne l'acce au jar lors de la compilation -->
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>*.jar</include>
						</resource>
					</resources>
					<!-- Assure la creation d'un tag "propre" avec la version -->
					<imageTags>
						<imageTag>${project.version}</imageTag>
						<imageTag>latest</imageTag>
					</imageTags>
				</configuration>
				<!-- On force ci-dessous l'execution du docker build sur un mvn package -->
				<executions>
					<execution>
						<id>build-image</id>
						<phase>package</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
		<!-- // Fin des plugins -->
	</build>
</project>
<!-- // [END footer] -->
